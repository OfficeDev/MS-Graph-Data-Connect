{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "destinationServicePrincipalAadId": {
      "type": "string",
      "metadata": {
        "description": "The AAD object Id of the service principal that needs to access the destination Data Lake store."
      }
    },
    "destinationServicePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The id of the service principal that has access to the destination Data Lake store."
      }
    },
    "destinationServicePrincipalKey": {
      "type": "string",
      "metadata": {
        "description": "The key of the service principal that has access to the destination Data Lake store."
      }
    },
    "triggerStartTime": {
      "type": "string",
      "metadata": {
        "description": "Start time for the trigger."
      }
    },
    "triggerEndTime": {
      "type": "string",
      "metadata": {
        "description": "End time for the trigger."
      }
    }
  },
  "variables": {
    "dataFactoryName": "[concat('myadf', uniqueString(resourceGroup().id))]",
    "destinationAdlsAccountName": "[concat('myadls', uniqueString(resourceGroup().id))]",
    "integrationRuntimeName": "[concat('myir', uniqueString(resourceGroup().id))]",
    "sourceLinkedServiceName": "SourceO365LinkedService",
    "destinationLinkedServiceName": "DestinationADLSLinkedService",
    "waterMarkLinkedServiceName": "WatermarkLinkedService",
    "inputMessageDatasetName": "O365InputMessageDataset",
    "outputMessageDatasetName": "ADLSOutputMessageDataset",
    "waterMarkDatasetName": "WaterMarkDataSet",
    "pipelineName": "O365ToADLSPipeline",
    "o365DataDiscoveryServiceUrl": "https://52.165.130.25/DiscoveryService/DataPreparationJob",
    "destinationAdlsLocation": "East US 2",
    "outputDataLakeStore": {
      "messagePath": "targetFolder/Message"
    }
  },
  "resources": [
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "name": "[variables('destinationAdlsAccountName')]",
      "comments": "Creates the destination Data Lake store in the customer's subscription used in the ADF pipeline for the data output.",
      "location": "[variables('destinationAdlsLocation')]",
      "apiVersion": "2016-11-01",
      "properties": {
        "initialUser": "[parameters('destinationServicePrincipalAadId')]",
        "newTier": "Consumption",
        "encryptionState": "Enabled",
        "encryptionConfig": {
          "type": "ServiceManaged"
        }
      }
    },
    {
      "name": "[variables('dataFactoryName')]",
      "apiVersion": "2017-09-01-preview",
      "type": "Microsoft.DataFactory/factories",
      "comments": "Creates the ADF pipeline that copies data from O365 to the newly created destination ADLS.",
      "dependsOn": [
        "[resourceId('Microsoft.DataLakeStore/accounts/', variables('destinationAdlsAccountName'))]"
      ],
      "location": "East US",
      "resources": [
        {
          "name": "[variables('integrationRuntimeName')]",
          "type": "integrationRuntimes",
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "Managed",
            "typeProperties": {
              "computeProperties": {
                "location": "[resourceGroup().location]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ]
        },
        {
          "type": "linkedservices",
          "name": "[variables('sourceLinkedServiceName')]",
          "comments": "Creates the link to O365 which is used as the source of the data extraction. Using service principal supplied by the source ADLS owner.",
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "Office365",
            "description": "Source O365 linked service",
            "typeProperties": {
              "office365tenantId": "[subscription().tenantId]",
              "o365DataDiscoveryServiceUrl": "[variables('o365DataDiscoveryServiceUrl')]",
              "office365SubscriptionId": "00000000-0000-0000-0000-000000000000",
              "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[parameters('destinationServicePrincipalKey')]"
              },
              "servicePrincipalTenantId": "[subscription().tenantId]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('destinationLinkedServiceName')]",
          "comments": "Creates the link to the newly created destination ADLS, using service principal supplied by the customer deploying this template.",
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureDataLakeStore",
            "description": "Destination Azure Data Lake Store linked service",
            "typeProperties": {
              "dataLakeStoreUri": "[concat('adl://', reference(resourceId('Microsoft.DataLakeStore/accounts', variables('destinationAdlsAccountName'))).endpoint)]",
              "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[parameters('destinationServicePrincipalKey')]"
              },
              "tenant": "[subscription().tenantId]",
              "resourceGroupName": "[resourceGroup().name]",
              "subscriptionId": "[subscription().subscriptionId]",
              "connectVia": {
                "referenceName": "[variables('integrationRuntimeName')]",
                "type": "IntegrationRuntimeReference"
              }
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('waterMarkLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": {
                "value": "Sql Connection String",
                "type": "SecureString"
              }
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('inputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceLinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "published": false,
            "type": "Office365Table",
            "linkedServiceName": {
              "referenceName": "[variables('sourceLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "structure": [
              {
                "name": "Subject",
                "type": "string"
              },
              {
                "name": "HasAttachments",
                "type": "boolean"
              },
              {
                "name": "SentDateTime",
                "type": "DateTime"
              },
              {
                "name": "ReceivedDateTime",
                "type": "DateTime"
              },
              {
                "name": "Sender",
                "type": "string"
              },
              {
                "name": "From",
                "type": "string"
              },
              {
                "name": "ToRecipients",
                "type": "string"
              },
              {
                "name": "CcRecipients",
                "type": "string"
              },
              {
                "name": "BccRecipients",
                "type": "string"
              },
              {
                "name": "ConversationId",
                "type": "string"
              }
            ],
            "typeProperties": {
              "tableName": "BasicDataSet_v0.Message_v0",
              "predicate": {
                "type": "Expression",
                "value": "SentDateTime > @{dataset().windowStart} AND SentDateTime  < @{dataset().windowEnd}"
              }
            },
            "parameters": {
              "windowStart": {
                "type": "String"
              },
              "windowEnd": {
                "type": "String"
              }
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('outputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('destinationLinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "published": false,
            "type": "AzureDataLakeStoreFile",
            "linkedServiceName": {
              "referenceName": "[variables('destinationLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "typeProperties": {
              "folderPath": "[variables('outputDataLakeStore').messagePath]"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('waterMarkDatasetName')]",
          "dependsOn": [
            "[variables('waterMarkLinkedServiceName')]",
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureSqlTable",
            "typeProperties": {
              "tableName": "watermarktable"
            },
            "linkedServiceName": {
              "referenceName": "[variables('waterMarkLinkedServiceName')]",
              "type": "LinkedServiceReference"
            }
          }
        },
        {
          "type": "pipelines",
          "name": "[variables('pipelineName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceLinkedServiceName')]",
            "[variables('destinationLinkedServiceName')]",
            "[variables('waterMarkLinkedServiceName')]",
            "[variables('inputMessageDatasetName')]",
            "[variables('outputMessageDatasetName')]",
            "[variables('waterMarkDatasetName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "parameters": {
              "windowStart": {
                "type": "String"
              },
              "windowEnd": {
                "type": "String"
              },
              "now": {
                "type": "String"
              }
            },
            "activities": [
              {
                "name": "LookupOldWaterMarkActivity",
                "type": "Lookup",
                "typeProperties": {
                  "source": {
                    "type": "SqlSource",
                    "sqlReaderQuery": "exec sp_read_watermark 'Message'"
                  },
                  "dataset": {
                    "referenceName": "[variables('waterMarkDatasetName')]",
                    "type": "DatasetReference"
                  }
                }
              },
              {
                "name": "CopyMessageFromO365ToAzureDLS",
                "description": "Copy message data from O365 to Azure Data Lake Store",
                "type": "Copy",
                "inputs": [
                  {
                    "referenceName": "[variables('inputMessageDatasetName')]",
                    "type": "DatasetReference",
                    "parameters": {
                      "windowStart": {
                        "value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.Watermark}",
                        "type": "Expression"
                      },
                      "windowEnd": {
                        "value": "@pipeline().parameters.now",
                        "type": "Expression"
                      }
                    }
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('outputMessageDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "typeProperties": {
                  "source": {
                    "type": "Office365Source"
                  },
                  "sink": {
                    "type": "AzureDataLakeStoreSink"
                  }
                },
                "dependsOn": [
                  {
                    "activity": "LookupOldWaterMarkActivity",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ]
              },
              {
                "name": "StoredProceduretoWriteWatermarkActivity",
                "type": "SqlServerStoredProcedure",
                "typeProperties": {
                  "storedProcedureName": "sp_write_watermark",
                  "storedProcedureParameters": {
                    "LastModifiedtime": {
                      "value": "@pipeline().parameters.now"
                    },
                    "TableName": {
                      "value": "Message"
                    }
                  }
                },
                "dependsOn": [
                  {
                    "activity": "CopyMessageFromO365ToAzureDLS",
                    "dependencyConditions": [
                      "Succeeded"
                    ]
                  }
                ],
                "linkedServiceName": {
                  "referenceName": "[variables('waterMarkLinkedServiceName')]",
                  "type": "LinkedServiceReference"
                }
              }
            ]
          }
        },
        {
          "type": "triggers",
          "name": "WatermarkTrigger",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceLinkedServiceName')]",
            "[variables('destinationLinkedServiceName')]",
            "[variables('inputMessageDatasetName')]",
            "[variables('outputMessageDatasetName')]",
            "[variables('pipelineName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "TumblingWindowTrigger",
            "typeProperties": {
              "frequency": "Hour",
              "interval": 24,
              "startTime": "[parameters('triggerStartTime')]",
              "endTime": "[parameters('triggerEndTime')]",
              "delay": "00:00:01",
              "retryPolicy": {
                "count": 2,
                "intervalInSeconds": 30
              },
              "maxConcurrency": 1
            },
            "pipeline": {
              "pipelineReference": {
                "type": "PipelineReference",
                "referenceName": "[variables('pipelineName')]"
              },
              "parameters": {
                "windowStart": "@trigger().outputs.windowStartTime",
                "windowEnd": "@trigger().outputs.windowEndTime",
                "now": "@{utcnow()}"
              }
            },
            "runtimeState": "Started"
          }
        }
      ]
    }
  ]
}