{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "destinationServicePrincipalAadId": {
      "type": "string",
      "metadata": {
        "description": "The AAD object Id of the service principal that needs to access the destination Data Lake store."
      }
    },
    "destinationServicePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The id of the service principal that has access to the destination Data Lake store."
      }
    },
    "destinationServicePrincipalKey": {
      "type": "string",
      "metadata": {
        "description": "The key of the service principal that has access to the destination Data Lake store."
      }
    },
    "userId": {
      "type": "string",
      "metadata": {
        "description": "The Object Id of the user installing the app."
      }
    }
  },
  "variables": {
    "dataFactoryName": "[concat('myadf', uniqueString(resourceGroup().id))]",
    "destinationAdlsAccountName": "[concat('myadls', uniqueString(resourceGroup().id))]",
    "integrationRuntimeName": "[concat('myir', uniqueString(resourceGroup().id))]",
    "destinationSqlServerName": "[concat('mysqlserver', uniqueString(resourceGroup().id))]",
    "destinationSqlDbName": "[concat('mysqldb', uniqueString(resourceGroup().id))]",
    "sqlAdminLogin": "[concat('sqladmin', uniqueString(resourceGroup().id))]",
    "sqlAdminPassword": "[concat('Sq!Pwd', uniqueString(resourceGroup().id))]",
    "sourceO365LinkedServiceName": "SourceO365LinkedService",
    "destinationADLSLinkedServiceName": "DestinationADLSLinkedService",
    "o365InputMessageDatasetName": "O365InputMessageDataset",
    "adlsOutputMessageDatasetName": "ADLSOutputMessageDataset",
    "destinationSQLLinkedServiceName": "DestinationSQLLinkedService",
    "adlsInputMessageDatasetName": "ADLSInputMessageDataset",
    "sqlOutputMessageDatasetName": "SQLOutputMessageDataset",
    "pipelineName": "O365ToADLSPipeline",
    "o365DataDiscoveryServiceUrl": "https://52.165.130.25/DiscoveryService/DataPreparationJob",
    "destinationAdlsLocation": "East US 2",
    "outputDataLakeStore": {
      "messagePath": "targetFolder/Message"
    },
    "dbBackupURI": "{db backup uri}"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2017-05-01",
      "name": "[guid(resourceGroup().id)]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "principalId": "[parameters('destinationServicePrincipalAadId')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.DataLakeStore/accounts",
      "name": "[variables('destinationAdlsAccountName')]",
      "comments": "Creates the destination Data Lake store in the customer's subscription used in the ADF pipeline for the data output.",
      "location": "[variables('destinationAdlsLocation')]",
      "apiVersion": "2016-11-01",
      "properties": {
        "initialUser": "[parameters('destinationServicePrincipalAadId')]",
        "newTier": "Consumption",
        "encryptionState": "Enabled",
        "encryptionConfig": {
          "type": "ServiceManaged"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('destinationSqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[variables('sqlAdminLogin')]",
        "administratorLoginPassword": "[variables('sqlAdminPassword')]"
      },
      "tags": {
        "displayName": "SqlServer"
      },
      "resources": [
        {
          "apiVersion": "2015-01-01",
          "name": "[variables('destinationSqlDbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('destinationSqlServerName'))]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          },
          "tags": {
            "displayName": "SqlDb"
          },
          "resources": [
            {
              "name": "Import",
              "type": "extensions",
              "apiVersion": "2014-04-01",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('destinationSqlServerName'), variables('destinationSqlDbName'))]"
              ],
              "properties": {
                "operationMode": "Import",
                "storageKey": "?",
                "storageKeyType": "SharedAccessKey",
                "administratorLogin": "[variables('sqlAdminLogin')]",
                "administratorLoginPassword": "[variables('sqlAdminPassword')]",
                "storageUri": "[variables('dbBackupURI')]"
              }
            }
          ]
        },
        {
          "apiVersion": "2014-04-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('destinationSqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "name": "[variables('dataFactoryName')]",
      "apiVersion": "2017-09-01-preview",
      "type": "Microsoft.DataFactory/factories",
      "comments": "Creates the ADF pipeline that copies data from O365 to the newly created destination ADLS.",
      "dependsOn": [
        "[resourceId('Microsoft.DataLakeStore/accounts/', variables('destinationAdlsAccountName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('destinationSqlServerName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('destinationSqlServerName'), variables('destinationSqlDbName'))]"
      ],
      "location": "East US",
      "resources": [
        {
          "name": "[variables('integrationRuntimeName')]",
          "type": "integrationRuntimes",
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "Managed",
            "typeProperties": {
              "computeProperties": {
                "location": "[resourceGroup().location]"
              }
            }
          },
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ]
        },
        {
          "type": "linkedservices",
          "name": "[variables('sourceO365LinkedServiceName')]",
          "comments": "Creates the link to O365 which is used as the source of the data extraction. Using service principal supplied by the source ADLS owner.",
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "Office365",
            "description": "Source O365 linked service",
            "typeProperties": {
              "office365tenantId": "[subscription().tenantId]",
              "o365DataDiscoveryServiceUrl": "[variables('o365DataDiscoveryServiceUrl')]",
              "PrivacyPolicyUri": "http://www.wkw.com/privacy",
              "TermsOfUseUri": "http://www.wkw.com/tos",
              "office365SubscriptionId": "00000000-0000-0000-0000-000000000000",
              "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[parameters('destinationServicePrincipalKey')]"
              },
              "servicePrincipalTenantId": "[subscription().tenantId]",
              "userId": "[parameters('userId')]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('destinationADLSLinkedServiceName')]",
          "comments": "Creates the link to the newly created destination ADLS, using service principal supplied by the customer deploying this template.",
          "dependsOn": [
            "[variables('dataFactoryName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureDataLakeStore",
            "description": "Destination Azure Data Lake Store linked service",
            "typeProperties": {
              "dataLakeStoreUri": "[concat('adl://', reference(resourceId('Microsoft.DataLakeStore/accounts', variables('destinationAdlsAccountName'))).endpoint)]",
              "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
              "servicePrincipalKey": {
                "type": "SecureString",
                "value": "[parameters('destinationServicePrincipalKey')]"
              },
              "tenant": "[subscription().tenantId]",
              "resourceGroupName": "[resourceGroup().name]",
              "subscriptionId": "[subscription().subscriptionId]",
              "connectVia": {
                "referenceName": "[variables('integrationRuntimeName')]",
                "type": "IntegrationRuntimeReference"
              }
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('o365InputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceO365LinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "published": false,
            "type": "Office365Table",
            "linkedServiceName": {
              "referenceName": "[variables('sourceO365LinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "structure": [
              {
                "name": "Id",
                "type": "string"
              },
              {
                "name": "CreatedDateTime",
                "type": "datetime"
              },
              {
                "name": "LastModifiedDateTime",
                "type": "datetime"
              },
              {
                "name": "ReceivedDateTime",
                "type": "datetime"
              },
              {
                "name": "SentDateTime",
                "type": "datetime"
              },
              {
                "name": "Subject",
                "type": "string"
              },
              {
                "name": "InternetMessageId",
                "type": "string"
              },
              {
                "name": "UniqueBody",
                "type": "string"
              },
              {
                "name": "Importance",
                "type": "string"
              },
              {
                "name": "ParentFolderId",
                "type": "string"
              },
              {
                "name": "Sender",
                "type": "string"
              },
              {
                "name": "From",
                "type": "string"
              },
              {
                "name": "ToRecipients",
                "type": "string"
              },
              {
                "name": "CcRecipients",
                "type": "string"
              },
              {
                "name": "BccRecipients",
                "type": "string"
              },
              {
                "name": "ReplyTo",
                "type": "string"
              },
              {
                "name": "ConversationId",
                "type": "string"
              },
              {
                "name": "IsDeliveryReceiptRequested",
                "type": "boolean"
              },
              {
                "name": "IsReadReceiptRequested",
                "type": "boolean"
              },
              {
                "name": "IsRead",
                "type": "boolean"
              },
              {
                "name": "IsDraft",
                "type": "boolean"
              }
            ],
            "typeProperties": {
              "tableName": "BasicDataSet_v0.Message_v0"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('adlsOutputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('destinationADLSLinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "published": false,
            "type": "AzureDataLakeStoreFile",
            "linkedServiceName": {
              "referenceName": "[variables('destinationADLSLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "typeProperties": {
              "folderPath": "[variables('outputDataLakeStore').messagePath]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('destinationSQLLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[resourceId('Microsoft.Sql/servers', variables('destinationSqlServerName'))]",
            "[resourceId('Microsoft.Sql/servers/databases', variables('destinationSqlServerName'), variables('destinationSqlDbName'))]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureSqlDatabase",
            "description": "Azure SQL destination linked service",
            "typeProperties": {
              "connectionString": {
                "type": "SecureString",
                "value": "[concat('Server=tcp:', variables('destinationSqlServerName'), '.database.windows.net,1433;Initial Catalog=', variables('destinationSqlDbName'), ';Persist Security Info=False;User ID=', variables('sqlAdminLogin'), ';Password=', variables('sqlAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
              },
              "tenant": "[subscription().tenantId]",
              "resourceGroupName": "[resourceGroup().name]",
              "subscriptionId": "[subscription().subscriptionId]"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('adlsInputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('destinationADLSLinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureDataLakeStoreFile",
            "linkedServiceName": {
              "referenceName": "[variables('destinationADLSLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "structure": [
              {
                "name": "Id",
                "type": "String",
                "identity": "Id"
              },
              {
                "name": "CreatedDateTime",
                "type": "DateTime",
                "format": "yyyy-MM-ddTHH:mm:ssZ",
                "identity": "CreatedDateTime"
              },
              {
                "name": "LastModifiedDateTime",
                "type": "DateTime",
                "format": "yyyy-MM-ddTHH:mm:ssZ",
                "identity": "LastModifiedDateTime"
              },
              {
                "name": "SentDateTime",
                "type": "DateTime",
                "format": "yyyy-MM-ddTHH:mm:ssZ",
                "identity": "SentDateTime"
              },
              {
                "name": "ReceivedDateTime",
                "type": "DateTime",
                "format": "yyyy-MM-ddTHH:mm:ssZ",
                "identity": "ReceivedDateTime"
              },
              {
                "name": "Subject",
                "type": "String",
                "identity": "Subject"
              },
              {
                "name": "InternetMessageId",
                "type": "string",
                "identity": "InternetMessageId"
              },
              {
                "name": "UniqueBody",
                "type": "String",
                "identity": "UniqueBody"
              },
              {
                "name": "Importance",
                "type": "String",
                "identity": "Importance"
              },
              {
                "name": "ParentFolderId",
                "type": "String",
                "identity": "ParentFolderId"
              },
              {
                "name": "Sender",
                "type": "String",
                "identity": "Sender"
              },
              {
                "name": "From",
                "type": "String",
                "identity": "From"
              },
              {
                "name": "ToRecipients",
                "type": "String",
                "identity": "ToRecipients"
              },
              {
                "name": "CcRecipients",
                "type": "String",
                "identity": "CCRecipients"
              },
              {
                "name": "BccRecipients",
                "type": "String",
                "identity": "BccRecipients"
              },
              {
                "name": "ReplyTo",
                "type": "String",
                "identity": "ReplyTo"
              },
              {
                "name": "ConversationId",
                "type": "String",
                "identity": "ConversationId"
              },
              {
                "name": "IsDeliveryReceiptRequested",
                "type": "Boolean",
                "identity": "IsDeliveryReceiptRequested"
              },
              {
                "name": "IsReadReceiptRequested",
                "type": "Boolean",
                "identity": "IsReadReceiptRequested"
              },
              {
                "name": "IsRead",
                "type": "Boolean",
                "identity": "IsRead"
              },
              {
                "name": "IsDraft",
                "type": "Boolean",
                "identity": "IsDraft"
              }
            ],
            "typeProperties": {
              "format": {
                "type": "JsonFormat"
              },
              "folderPath": "[variables('outputDataLakeStore').messagePath]"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('sqlOutputMessageDatasetName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('destinationSQLLinkedServiceName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "AzureSqlTable",
            "linkedServiceName": {
              "referenceName": "[variables('destinationSQLLinkedServiceName')]",
              "type": "LinkedServiceReference"
            },
            "structure": [
              {
                "name": "Id",
                "type": "String"
              },
              {
                "name": "CreatedDateTime",
                "type": "DateTime"
              },
              {
                "name": "LastModifiedDateTime",
                "type": "DateTime"
              },
              {
                "name": "ReceivedDateTime",
                "type": "DateTime"
              },
              {
                "name": "SentDateTime",
                "type": "DateTime"
              },
              {
                "name": "Subject",
                "type": "String"
              },
              {
                "name": "InternetMessageId",
                "type": "String"
              },
              {
                "name": "BodyPreview",
                "type": "String"
              },
              {
                "name": "Importance",
                "type": "String"
              },
              {
                "name": "ParentFolderId",
                "type": "String"
              },
              {
                "name": "ConversationId",
                "type": "String"
              },
              {
                "name": "Sender",
                "type": "String"
              },
              {
                "name": "From",
                "type": "String"
              },
              {
                "name": "ToRecipients",
                "type": "String"
              },
              {
                "name": "CCRecipients",
                "type": "String"
              },
              {
                "name": "BccRecipients",
                "type": "String"
              },
              {
                "name": "ReplyTo",
                "type": "String"
              },
              {
                "name": "IsDeliveryReceiptRequested",
                "type": "Boolean"
              },
              {
                "name": "IsReadReceiptRequested",
                "type": "Boolean"
              },
              {
                "name": "IsRead",
                "type": "Boolean"
              },
              {
                "name": "IsDraft",
                "type": "Boolean"
              }
            ],
            "typeProperties": {
              "tableName": "Messages"
            }
          }
        },
        {
          "type": "pipelines",
          "name": "[variables('pipelineName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceO365LinkedServiceName')]",
            "[variables('destinationADLSLinkedServiceName')]",
            "[variables('destinationSQLLinkedServiceName')]",
            "[variables('o365InputMessageDatasetName')]",
            "[variables('adlsOutputMessageDatasetName')]",
            "[variables('adlsInputMessageDatasetName')]",
            "[variables('sqlOutputMessageDatasetName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "activities": [
              {
                "name": "CopyMessageFromO365ToAzureDLS",
                "description": "Copy message data from O365 to Azure Data Lake Store",
                "type": "Copy",
                "inputs": [
                  {
                    "referenceName": "[variables('o365InputMessageDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('adlsOutputMessageDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "typeProperties": {
                  "source": {
                    "type": "Office365Source"
                  },
                  "sink": {
                    "type": "AzureDataLakeStoreSink"
                  }
                }
              },
              {
                "name": "CopyFromAzureDLSToSQL",
                "description": "Copy data from Azure Data Lake Store to SQL",
                "type": "Copy",
                "inputs": [
                  {
                    "referenceName": "[variables('adlsInputMessageDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "outputs": [
                  {
                    "referenceName": "[variables('sqlOutputMessageDatasetName')]",
                    "type": "DatasetReference"
                  }
                ],
                "typeProperties": {
                  "source": {
                    "type": "AzureDataLakeStoreSource"
                  },
                  "sink": {
                    "type": "SqlSink"
                  },
                  "enableSkipIncompatibleRow": true,
                  "translator": {
                    "type": "TabularTranslator",
                    "columnMappings": "Id: Id, CreatedDateTime: CreatedDateTime, LastModifiedDateTime: LastModifiedDateTime, ReceivedDateTime: ReceivedDateTime, SentDateTime: SentDateTime, Subject: Subject, InternetMessageId: InternetMessageId, UniqueBody: BodyPreview, Importance: Importance, ParentFolderId: ParentFolderId, ConversationId: ConversationId, Sender: Sender, From: From, ToRecipients: ToRecipients, CcRecipients: CCRecipients, BccRecipients: BccRecipients, ReplyTo: ReplyTo, IsDeliveryReceiptRequested: IsDeliveryReceiptRequested, IsReadReceiptRequested: IsReadReceiptRequested, IsRead: IsRead, IsDraft: IsDraft"
                  }
                },
                "dependsOn": [
                  {
                    "activity": "CopyMessageFromO365ToAzureDLS",
                    "dependencyConditions": [ "Succeeded" ]
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "triggers",
          "name": "pipelineTrigger",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('sourceO365LinkedServiceName')]",
            "[variables('destinationADLSLinkedServiceName')]",
            "[variables('destinationSQLLinkedServiceName')]",
            "[variables('o365InputMessageDatasetName')]",
            "[variables('adlsOutputMessageDatasetName')]",
            "[variables('adlsInputMessageDatasetName')]",
            "[variables('sqlOutputMessageDatasetName')]",
            "[variables('pipelineName')]"
          ],
          "apiVersion": "2017-09-01-preview",
          "properties": {
            "type": "ScheduleTrigger",
            "typeProperties": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "startTime": "2017-11-01T00:00:00Z",
                "endTime": "2018-11-01T00:00:00Z",
                "timeZone": "UTC"
              }
            },
            "pipelines": [
              {
                "pipelineReference": {
                  "type": "PipelineReference",
                  "referenceName": "[variables('pipelineName')]"
                },
                "parameters": {}
              }
            ]
          }
        }
      ]
    }
  ]
}