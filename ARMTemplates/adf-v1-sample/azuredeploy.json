{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "destinationServicePrincipalAadId": {
            "type": "string",
            "metadata": {
                "description": "The AAD object Id of the service principal that needs to access the destination Data Lake store."
            }
        },
        "destinationServicePrincipalId": {
            "type": "string",
            "metadata": {
                "description": "The id of the service principal that has access to the destination Data Lake store."
            }
        },
        "destinationServicePrincipalKey": {
            "type": "string",
            "metadata": {
                "description": "The key of the service principal that has access to the destination Data Lake store."
            }
        },
        "office365TenantId": {
            "type": "string",
            "metadata": {
                "description": "The id of the O365 tenant for which the data needs to be extracted."
            }
        },
        "webSiteName": {
            "type": "string"
        }
    },
    "variables": {
        "dataFactoryName": "[concat('O365ToAzureDLSDataFactory', uniqueString(resourceGroup().id))]",
        "destinationAdlsAccountName": "[concat('destaccount', uniqueString(resourceGroup().id))]",
        "sourceLinkedServiceName": "SourceO365LinkedService",
        "destinationLinkedServiceName": "DestinationADLSLinkedService",
        "inputDatasetName": "O365InputDataset",
        "outputDatasetName": "ADLSOutputDataset",
        "pipelineName": "O365ToADLSPipeline",
        "o365DataDiscoveryServiceUrl": "https://52.165.130.25/DiscoveryService/DataPreparationJob",
        "webSiteName": "[parameters('webSiteName')]",
        "hostingPlanName": "Free",
        "skuCapacity": "1",
        "skuName": "F1",
        "destinationAdlsLocation": "East US 2",
		"aadInstance": "https://login.microsoftonline.com/",
        "artifacts": {
            "webAppRemote": "https://euclidsamplestorage.blob.core.windows.net/webappcontainer/WhoKnowWho.zip"
        },
        "outputDataLakeStore": {
            "path": "targetFolder"
        }
    },
    "resources": [
		{
			"type": "Microsoft.Authorization/roleAssignments",
			"apiVersion": "2017-05-01",
			"name": "[guid(resourceGroup().id)]",
			"properties": {
				"roleDefinitionId": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
				"principalId": "[parameters('destinationServicePrincipalAadId')]",
				"scope": "[resourceGroup().id]"
			}
		},
        {
            "type": "Microsoft.DataLakeStore/accounts",
            "name": "[variables('destinationAdlsAccountName')]",
            "comments": "Creates the destination Data Lake store in the customer's subscription used in the ADF pipeline for the data output.",
            "location": "[variables('destinationAdlsLocation')]",
            "apiVersion": "2016-11-01",
            "properties": {
                "initialUser": "[parameters('destinationServicePrincipalAadId')]",
                "newTier": "Consumption",
                "encryptionState": "Enabled",
                "encryptionConfig": {
                    "type": "ServiceManaged"
                }
            }
        },
        {
            "name": "[variables('dataFactoryName')]",
            "apiVersion": "2017-09-01-preview",
            "type": "Microsoft.DataFactory/factories",
            "comments": "Creates the ADF pipeline that copies data from O365 to the newly created destination ADLS.",
            "dependsOn": [
                "[resourceId('Microsoft.DataLakeStore/accounts/', variables('destinationAdlsAccountName'))]"
            ],
            "location": "East US",
            "resources": [
				{
                    "type": "linkedservices",
                    "name": "[variables('sourceLinkedServiceName')]",
                    "comments": "Creates the link to O365 which is used as the source of the data extraction. Using service principal supplied by the source ADLS owner.",
                    "dependsOn": [
                        "[variables('dataFactoryName')]"
                    ],
                    "apiVersion": "2017-09-01-preview",
                    "properties": {
                        "type": "Office365",
                        "description": "Source O365 linked service",
                        "typeProperties": {
                            "office365tenantId": "[parameters('office365tenantId')]",
                            "o365DataDiscoveryServiceUrl":"[variables('o365DataDiscoveryServiceUrl')]",
                            "office365SubscriptionId": "00000000-0000-0000-0000-000000000000",
                            "servicePrincipalId": "00000000-0000-0000-0000-000000000000",
                            "servicePrincipalKey": {
                                "type": "SecureString",
                                "value": "A/sGehNSNIdxr9ZdMADbEfL1tD93U2RtwCohKy67QI4="
                            },
                            "tenant": "[parameters('office365tenantId')]"
                        }
                    }
                },
                {
                    "type": "linkedservices",
                    "name": "[variables('destinationLinkedServiceName')]",
                    "comments": "Creates the link to the newly created destination ADLS, using service principal supplied by the customer deploying this template.",
                    "dependsOn": [
                        "[variables('dataFactoryName')]"
                    ],
                    "apiVersion": "2017-09-01-preview",
                    "properties": {
                        "type": "AzureDataLakeStore",
                        "description": "Destination Azure Data Lake Store linked service",
                        "typeProperties": {
                            "dataLakeStoreUri": "[concat('adl://', reference(resourceId('Microsoft.DataLakeStore/accounts', variables('destinationAdlsAccountName'))).endpoint)]",
                            "servicePrincipalId": "[parameters('destinationServicePrincipalId')]",
                            "servicePrincipalKey": {
                                "type": "SecureString",
                                "value": "[parameters('destinationServicePrincipalKey')]"
                            },
                            "tenant": "[subscription().tenantId]",
							"resourceGroupName": "[resourceGroup().name]",
                            "subscriptionId": "[subscription().subscriptionId]"
                        }
                    }
                },
                {
                    "type": "datasets",
                    "name": "[variables('inputDatasetName')]",
                    "dependsOn": [
                        "[variables('dataFactoryName')]",
                        "[variables('sourceLinkedServiceName')]"
                    ],
                    "apiVersion": "2017-09-01-preview",
                    "properties": {
                        "published": false,
                        "type": "Office365Table",
                        "linkedServiceName": {
							"referenceName": "[variables('sourceLinkedServiceName')]",
							"type": "LinkedServiceReference"
						},
						"structure": [
							{
								"name": "Subject",
								"type": "string"
							},
							{
								"name": "HasAttachments",
								"type": "bool"
							},
							{
								"name": "SentDateTime",
								"type": "DateTime"
							},
							{
								"name": "ReceivedDateTime",
								"type": "DateTime"
							},
							{
								"name": "Sender",
								"type": "Object"
							},
							{
								"name": "From",
								"type": "Object"
							},
							{
								"name": "ToRecipients",
								"type": "Object"
							},
							{
								"name": "CcRecipients",
								"type": "Object"
							},
							{
								"name": "BccRecipients",
								"type": "Object"
							},
							{
								"name": "ConversationId",
								"type": "string"
							},
							{
								"name": "ReceivedDateTime",
								"type": "DateTime"
							}
						],
                        "typeProperties": {
                            "tableName": "Message"
                        },
                        "external": true
                    }
                },
                {
                    "type": "datasets",
                    "name": "[variables('outputDatasetName')]",
                    "dependsOn": [
                        "[variables('dataFactoryName')]",
                        "[variables('destinationLinkedServiceName')]"
                    ],
                    "apiVersion": "2017-09-01-preview",
                    "properties": {
                        "published": false,
                        "type": "AzureDataLakeStore",
						"linkedServiceName": {
							"referenceName": "[variables('destinationLinkedServiceName')]",
							"type": "LinkedServiceReference"
						},
                        "typeProperties": {
                            "folderPath": "[variables('outputDataLakeStore').path]"
                        }
                    }
                },
                {
                    "type": "pipelines",
                    "name": "[variables('pipelineName')]",
                    "dependsOn": [
                        "[variables('dataFactoryName')]",
                        "[variables('sourceLinkedServiceName')]",
                        "[variables('destinationLinkedServiceName')]",
                        "[variables('inputDatasetName')]",
                        "[variables('outputDatasetName')]"
                    ],
                    "apiVersion": "2017-09-01-preview",
                    "properties": {
                        "activities": [{
                            "name": "CopyFromO365ToAzureDLS",
                            "description": "Copy data from O365 to Azure Data Lake Store",
                            "type": "Copy",
                            "inputs": [{
                                "referenceName": "[variables('inputDatasetName')]",
                                "type": "DatasetReference"
                            }],
                            "outputs": [{
                                "referenceName": "[variables('outputDatasetName')]",
                                "type": "DatasetReference"
                            }],
                            "typeProperties": {
                                "source": {
                                    "type": "Office365Source",
                                    "recursive": false
                                },
                                "sink": {
                                    "type": "AzureDataLakeStoreSink",
                                    "copyBehavior": "MergeFiles",
                                    "writeBatchSize": 0,
                                    "writeBatchTimeout": "00:00:00"
                                }
                            },
                            "policy": {
                                "timeout": "1.00:00:00",
                                "concurrency": 1,
                                "executionPriorityOrder": "NewestFirst",
                                "style": "StartOfInterval",
                                "retry": 3,
                                "longRetry": 0,
                                "longRetryInterval": "00:00:00"
                            },
                            "scheduler": {
                                "frequency": "Day",
                                "interval": 1
                            }
                        }],
                        "start": "2017-09-20T00:00:00Z",
                        "end": "2018-09-20T00:00:00Z"
                    }
                },
				{
					"type": "triggers",
					"name": "pipelineTrigger",
					"dependsOn": [
						"[variables('dataFactoryName')]",
						"[variables('sourceLinkedServiceName')]",
						"[variables('destinationLinkedServiceName')]",
						"[variables('inputDatasetName')]",
						"[variables('outputDatasetName')]",
						"[variables('pipelineName')]"
					],
					"apiVersion": "2017-09-01-preview",
					"properties": {
						"type": "ScheduleTrigger",
						"typeProperties": {
							"recurrence": {
								"frequency": "Day",
								"interval": 1,
								"startTime": "2017-11-01T00:00:00Z",
								"endTime": "2018-11-01T00:00:00Z",
								"timeZone": "UTC"
							}
						},
						"pipelines": [{
							"pipelineReference": {
								"type": "PipelineReference",
								"referenceName": "[variables('pipelineName')]"
							},
                        "parameters": {}
						}]
					}
				}
            ]
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "[variables('skuName')]",
                "capacity": "[int(variables('skuCapacity'))]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "comments": "Creates the web app that uses data stored in the newly created target ADLS.",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
                "displayName": "Website"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            },
            "resources": [{
                    "name": "MSDeploy",
                    "type": "extensions",
                    "comments": "Creates the web app deployment.",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
                    ],
                    "tags": {
                        "displayName": "WKWWebAppDeployment"
                    },
                    "properties": {
                        "packageUri": "[variables('artifacts').webAppRemote]",
                        "dbType": "None",
                        "setParameters": {
                            "IIS Web Application Name": "[variables('webSiteName')]"
                        }
                    }
                },
                {
                    "name": "appsettings",
                    "type": "config",
                    "comments": "Creates app setting overrides for the web app.",
                    "apiVersion": "2015-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "AppSettingsConfiguration"
                    },
                    "properties": {
                        "ida:TenantId": "[subscription().tenantId]",
                        "ida:ClientId": "[parameters('destinationServicePrincipalId')]",
                        "ida:PostLogoutRedirectUri": "[variables('webSiteName')]",
						"ida:AADInstance": "[variables('aadInstance')]",
                        "adls:TenantId": "[subscription().tenantId]",
                        "adls:ClientId": "[parameters('destinationServicePrincipalId')]",
                        "adls:ClientSecret": "[parameters('destinationServicePrincipalKey')]",
                        "adls:AccountName": "[variables('destinationAdlsAccountName')]",
                        "adls:Path": "[variables('outputDataLakeStore').path]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
            "type": "Microsoft.Insights/autoscalesettings",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
                "displayName": "AutoScaleSettings"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            ],
            "properties": {
                "profiles": [{
                    "name": "Default",
                    "capacity": {
                        "minimum": 1,
                        "maximum": 2,
                        "default": 1
                    },
                    "rules": [{
                            "metricTrigger": {
                                "metricName": "CpuPercentage",
                                "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT10M",
                                "timeAggregation": "Average",
                                "operator": "GreaterThan",
                                "threshold": 80.0
                            },
                            "scaleAction": {
                                "direction": "Increase",
                                "type": "ChangeCount",
                                "value": 1,
                                "cooldown": "PT10M"
                            }
                        },
                        {
                            "metricTrigger": {
                                "metricName": "CpuPercentage",
                                "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                                "timeGrain": "PT1M",
                                "statistic": "Average",
                                "timeWindow": "PT1H",
                                "timeAggregation": "Average",
                                "operator": "LessThan",
                                "threshold": 60.0
                            },
                            "scaleAction": {
                                "direction": "Decrease",
                                "type": "ChangeCount",
                                "value": 1,
                                "cooldown": "PT1H"
                            }
                        }
                    ]
                }],
                "enabled": false,
                "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Insights/components",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[variables('webSiteName')]"
            }
        }
    ]
}